name: Tests

on:
  push:
    branches:
      - master
      - '*.x'
  pull_request:

permissions:
  contents: read

jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - id: set-matrix
        run: |
          branchName=$(echo '${{ github.ref }}' | sed 's,refs/heads/,,g')
          matrix=$(jq --arg branchName "$branchName" 'map(
              . | select((.runOn==$branchName) or (.runOn=="always"))
          )' matrix_includes.json)
          echo "matrix={\"include\":$(echo $matrix)}" >> $GITHUB_OUTPUT
  tests:
    needs: matrix_prep
    runs-on: ${{ matrix.runs_on }}
    strategy:
      fail-fast: true
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
    name: PHP ${{ matrix.php_version }}
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: xdebug
          tools: ${{ matrix.php_unit_version }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
