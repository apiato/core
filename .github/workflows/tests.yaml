name: "Test suite"

on:
  push:
    branches: [ master, '*.x' ]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: nelonoel/branch-name@v1.0.1
      - id: set-matrix
        uses: JoshuaTheMiller/conditional-build-matrix@v2.0.1
        with:
          filter: '[?runOn==`${{ env.BRANCH_NAME }}` || runOn==`${{ github.event.pull_request.base.ref }}` || runOn==`always`]'
  tests:
    needs: matrix_prep
    runs-on: ${{ matrix.runs_on }}
    strategy:
      fail-fast: true
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
    name: PHP ${{ matrix.php_version }}
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: xdebug
          tools: ${{ matrix.php_unit_version }}

      - name: Setup Composer token
        run: composer config -g github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}

      - name: Cache PHPUnit results
        uses: actions/cache@v4
        with:
          path: .phpunit.result.cache
          key: ${{ runner.OS }}-${{ github.repository }}-php-${{ matrix.php }}-phpunit-${{ github.sha }}
          restore-keys: |
            ${{ runner.OS }}-${{ github.repository }}-php-${{ matrix.php }}-phpunit-

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3
        with:
          composer-options: --prefer-dist

      - name: Execute tests
        run: vendor/bin/pest --ci --coverage-clover=coverage.xml --cache-directory=.phpunit.result.cache --order-by=random --colors=always --display-deprecations --display-incomplete --display-notices --display-warnings

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          slug: apiato/core
          files: coverage.xml
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
