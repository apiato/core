<?php

declare(strict_types=1);

namespace App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Controllers;

use Apiato\Support\Facades\Response;
use App\Containers\{{section-name}}\{{container-name}}\Actions\Create{{model}}Action;
use App\Containers\{{section-name}}\{{container-name}}\Actions\Delete{{model}}Action;
use App\Containers\{{section-name}}\{{container-name}}\Actions\Find{{model}}ByIdAction;
use App\Containers\{{section-name}}\{{container-name}}\Actions\List{{models}}Action;
use App\Containers\{{section-name}}\{{container-name}}\Actions\Update{{model}}Action;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\Create{{model}}Request;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\Delete{{model}}Request;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\Find{{model}}ByIdRequest;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\List{{models}}Request;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\Update{{model}}Request;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Transformers\{{model}}Transformer;
use App\Ship\Parents\Controllers\{{base-controller}};
use Illuminate\Http\JsonResponse;

final class {{class-name}} extends {{base-controller}}
{
    public function create(Create{{model}}Request $request, Create{{model}}Action $action): JsonResponse
    {
       ${{entity}} = $action->run($request);

       return Response::create(${{entity}}, {{model}}Transformer::class)->created();
    }

    public function findById(Find{{model}}ByIdRequest $request, Find{{model}}ByIdAction $action): JsonResponse
    {
        ${{entity}} = $action->run($request);

        return Response::create(${{entity}}, {{model}}Transformer::class)->ok();
    }

    public function list(List{{models}}Request $request, List{{models}}Action $action): JsonResponse
    {
        ${{entities}} = $action->run($request);

        return Response::create(${{entities}}, {{model}}Transformer::class)->ok();
    }

    public function update(Update{{model}}Request $request, Update{{model}}Action $action): JsonResponse
    {
        ${{entity}} = $action->run($request);

        return Response::create(${{entity}}, {{model}}Transformer::class)->ok();
    }

    public function delete(Delete{{model}}Request $request, Delete{{model}}Action $action): JsonResponse
    {
        $action->run($request);

        return Response::noContent();
    }
}
