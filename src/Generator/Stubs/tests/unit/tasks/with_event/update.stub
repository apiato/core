<?php

declare(strict_types=1);

namespace App\Containers\{{section-name}}\{{container-name}}\Tests\Unit\Tasks;

use App\Containers\{{section-name}}\{{container-name}}\Models\{{model}};
use App\Containers\{{section-name}}\{{container-name}}\Events\{{event}};
use App\Containers\{{section-name}}\{{container-name}}\Tasks\Update{{model}}Task;
use App\Containers\{{section-name}}\{{container-name}}\Tests\UnitTestCase;
use Illuminate\Support\Facades\Event;
use PHPUnit\Framework\Attributes\CoversClass;

#[CoversClass(Update{{model}}Task::class)]
final class {{class-name}} extends UnitTestCase
{
    // TODO TEST
    public function testUpdate{{model}}(): void
    {
        Event::fake();
        ${{_model}} = {{model}}::factory()->createOne();
        $data = [
            // 'some_field' => 'new_field_data',
        ];

        $updated{{model}} = app(Update{{model}}Task::class)->run(${{_model}}->id, $data);

        self::assertEquals(${{_model}}->id, $updated{{model}}->id);
        // self::assertEquals($data['some_field'], $updated{{model}}->some_field);
        Event::assertDispatched({{event}}::class);
    }
}
